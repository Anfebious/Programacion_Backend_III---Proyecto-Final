paths:
  api/users:
    get:
      summary: "Get all users"
      description: "Returns a list of all users"
      responses:
        '200':
          description: "List of users"
        '500':
          description: "Internal server error"
    
  api/users/{uid}:
    get:
      summary: "Get a user by ID"
      description: "Returns a specific user by their ID"
      parameters:
        - name: uid
          in: path
          description: "ID of the user"
          required: true
          schema:
            type: string
      responses:
        '200':
          description: "User found"
        '404':
          description: "User not found"

    put:
      summary: "Update a user by ID"
      description: "Update the details of a user"
      parameters:
        - name: uid
          in: path
          description: "ID of the user"
          required: true
          schema:
            type: string
      requestBody:
        description: "User data to update"
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                last_name:
                  type: string
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: "User updated"
        '404':
          description: "User not found"
        '400':
          description: "Invalid data"
    
    delete:
      summary: "Delete a user by ID"
      description: "Delete a specific user from the system"
      parameters:
        - name: uid
          in: path
          description: "ID of the user"
          required: true
          schema:
            type: string
      responses:
        '200':
          description: "User deleted"
        '404':
          description: "User not found"

  api/users/{uid}/documents:
    post:
      summary: "Upload documents for a user"
      description: "Upload files associated with a user"
      parameters:
        - name: uid
          in: path
          description: "ID of the user"
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                documents:
                  type: array
                  items:
                    type: string
                    format: binary
      responses:
        '200':
          description: "Files uploaded successfully"
        '400':
          description: "No files uploaded"
        '404':
          description: "User not found"